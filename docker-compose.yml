version: '3.9'

services:
  web:
    container_name: burger
    build:
      context: ./client/pittu-pittu
      dockerfile: ./Dockerfile
    networks:
      - proxy
    restart: always
    labels:
      # traefik common
      - traefik.enable=true
      - traefik.constraint-label=proxy

      # http redirect
      - traefik.http.routers.burger-redirect.rule=Host(`burger.${DOMAIN}`)
      - traefik.http.routers.burger-redirect.entrypoints=http
      - traefik.http.routers.burger-redirect.middlewares=https-redirect@file

      # https handle
      - traefik.http.routers.burger.rule=Host(`burger.${DOMAIN}`)
      - traefik.http.routers.burger.entrypoints=https

      # tls
      - traefik.http.routers.burger.tls=true
      - traefik.http.routers.burger.tls.certresolver=le
      - traefik.http.routers.burger.tls.options=modern@file
      - traefik.http.routers.burger.tls.domains[0].main=burger.${DOMAIN}
      - traefik.http.routers.burger.tls.domains[0].sans=*.dns.${DOMAIN}

      # service
      - traefik.http.services.burger.loadbalancer.server.port=80

  api:
    container_name: burger_api
    build:
      context: ./server/
      dockerfile: ./Dockerfile
    networks:
      - proxy
    restart: always
    labels:
      # traefik common
      - traefik.enable=true
      - traefik.constraint-label=proxy

      # http redirect
      - traefik.http.routers.api-burger-redirect.rule=Host(`api.burger.${DOMAIN}`)
      - traefik.http.routers.apiburger-redirect.entrypoints=http
      - traefik.http.routers.api-burger-redirect.middlewares=https-redirect@file

      # https handle
      - traefik.http.routers.api-burger.rule=Host(`api.burger.${DOMAIN}`)
      - traefik.http.routers.api-burger.entrypoints=https

      # tls
      - traefik.http.routers.api-burger.tls=true
      - traefik.http.routers.api-burger.tls.certresolver=le
      - traefik.http.routers.api-burger.tls.options=modern@file

      # service
      - traefik.http.services.api-burger.loadbalancer.server.port=3000




networks:
  proxy:
    external: true
